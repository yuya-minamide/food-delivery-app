import { Footer, Header } from "@/components";
import Head from "next/head";
import { useRouter } from "next/router";
import { useState, useEffect } from "react";
import toast, { Toaster } from "react-hot-toast";
import { AiOutlineCloudUpload } from "react-icons/ai";
import { useSelector } from "react-redux";
import { BackButton, Container, FormContainer, SaveButton, Title } from "@/styles/pages/edit";
import { ImagetoBase64 } from "@/utility/ImagetoBase64";

const Edit = () => {
	const router = useRouter();
	const storeData = useSelector((state) => state.store);
	const storeid = storeData._id;

	const [data, setData] = useState({
		restaurantname: "",
		name: "",
		category: "",
		price: "",
		image: "",
		description: "",
		storeid: storeid,
	});

	useEffect(() => {
		const { foodId } = router.query;

		if (foodId) {
			const fetchFoodData = async () => {
				try {
					const response = await fetch(`${process.env.NEXT_PUBLIC_SERVER_DOMAIN}/food/${foodId}`);
					const foodData = await response.json();

					setData(foodData);
				} catch (error) {
					console.error("Error fetching food data:", error);
				}
			};

			fetchFoodData();
		}
	}, [router.query]);

	const handleOnChange = (e) => {
		const { name, value } = e.target;

		setData((prevData) => ({
			...prevData,
			[name]: value,
		}));
	};

	const uploadImage = async (e) => {
		const imageData = await ImagetoBase64(e.target.files[0]);

		setData((prevData) => ({
			...prevData,
			image: imageData,
		}));
	};

	const handleSubmit = async (e) => {
		e.preventDefault();

		const { restaurantname, name, category, price, image, description } = data;
		if (restaurantname && name && category && price && image && description) {
			try {
				const response = await fetch(`${process.env.NEXT_PUBLIC_SERVER_DOMAIN}/food/${data._id}`, {
					method: "PUT",
					headers: {
						"Content-Type": "application/json",
					},
					body: JSON.stringify(data),
				});

				const resData = await response.json();
				toast.success(resData.message);

				setData({
					restaurantname: "",
					name: "",
					category: "",
					price: "",
					image: "",
					description: "",
				});

				router.push("/editlist");
			} catch (error) {
				console.error("Error updating food data:", error);
				toast.error("An error occurred while updating the food data");
			}
		} else {
			toast.error("Please enter required fields");
		}
	};

	const handleBackToList = () => {
		router.push("/editlist");
	};

	return (
		<>
			<Head>
				<title>Edit food</title>
				<meta name="description" content="Generated by create next app" />
				<meta name="viewport" content="width=device-width, initial-scale=1" />
			</Head>

			<Header />
			<Toaster position="top-center" />
			<Title>Edit food</Title>
			<Container>
				<FormContainer>
					<form onSubmit={handleSubmit}>
						<div>
							<label htmlFor="restaurantname">Restaurant name</label>
							<input type="text" name="restaurantname" value={data.restaurantname} onChange={handleOnChange} />
						</div>
						<div>
							<label htmlFor="name">Name</label>
							<input type="text" name="name" value={data.name} onChange={handleOnChange} />
						</div>

						<div>
							<label htmlFor="category">Category</label>
							<select id="category" name="category" value={data.category} onChange={handleOnChange}>
								<option value="select">Select</option>
								<option value="japanese">Japanese</option>
								<option value="chinese">Chinese</option>
								<option value="indian">Indian</option>
								<option value="american">American</option>
								<option value="mexican">Mexican</option>
								<option value="taiwan">Taiwan</option>
								<option value="other">Other</option>
							</select>
						</div>

						<div>
							<label htmlFor="price">Price</label>
							<input type="text" name="price" value={data.price} onChange={handleOnChange} />
						</div>

						<div>
							<label htmlFor="image">
								Image
								<div>
									<input type="file" accept="image/*" id="image" name="image" onChange={uploadImage} />
									{data.image ? (
										<img src={data.image} alt="Food" />
									) : (
										<span>
											<AiOutlineCloudUpload />
										</span>
									)}
								</div>
							</label>
						</div>

						<div>
							<label htmlFor="description">Description</label>
							<textarea rows="2" name="description" value={data.description} onChange={handleOnChange}></textarea>
						</div>

						<BackButton onClick={handleBackToList}>Back to list</BackButton>
						<SaveButton type="submit">Save</SaveButton>
					</form>
				</FormContainer>
			</Container>
			<Footer />
		</>
	);
};
export default Edit;
